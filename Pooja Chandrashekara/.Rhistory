ggscatter(actsubdata, x = "ActiveSubs", y = "MonthlyRevenue",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue")
ggscatter(actsubdata, x = "ActiveSubs", y = "MonthlyRevenue",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue"))
library(ggscatter)
library(ggscatterplot)
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
ggscatter(actsubdata, x = "ActiveSubs", y = "MonthlyRevenue",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue"))
install.packages("ggpubr")
library(ggpubr)
ggscatter(actsubdata, x = "ActiveSubs", y = "MonthlyRevenue",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue"))
#install.packages("ggpubr")
library(ggpubr)
ggscatter(actsubdata, x = "ActiveSubs", y = "MonthlyRevenue",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue"))
#install.packages("ggpubr")
library(ggpubr)
ggscatter(data = actsubdata, x = "ActiveSubs", y = "MonthlyRevenue",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue"))
datatel <- read.csv("Telecom Data.csv")
head(datatel)
actsubdata <- subset.data.frame(datatel, datatel$ActiveSubs >1)
print(actsubdata)
sum(is.na(actsubdata$ActiveSubs))
minsub <- 0
nosub <- 0
manysub <- 0
for (i in actsubdata$ActiveSubs){
if (i< 1){
nosub=nosub+1
}else if (i == 1){
minsub=minsub+1
}else if (i > 1) {
manysub=manysub+1
}
i=i+1
}
print(nosub)
print(manysub)
print(minsub)
cor.test(actsubdata$MonthlyRevenue, actsubdata$ActiveSubs, method='spearman')
#Plot with statistical results
library(ggplot2)
ggplot(data = actsubdata) +
geom_smooth(mapping = aes(x = ActiveSubs, y = MonthlyRevenue))
#install.packages("ggpubr")
library(ggpubr)
ggscatter(data = actsubdata, x = "ActiveSubs", y = "MonthlyRevenue",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue"))
#install.packages("ggpubr")
library(ggpubr)
ggscatter(data = actsubdata, x = "ActiveSubs", y = "MonthlyRevenue",
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue"))
#install.packages("ggpubr")
library(ggpubr)
ggscatter(data = actsubdata, x = "ActiveSubs", y = "MonthlyRevenue",
conf.int = TRUE )
#install.packages("ggpubr")
library(ggpubr)
ggscatter(data = actsubdata, x = "ActiveSubs", y = "MonthlyRevenue",
conf.int = TRUE, color="Violet")
Churned <- subset(Telecom_Data, Churn=="Yes")
Churned <- subset(datatel, Churn=="Yes")
str(Churned)
Retained <- subset(datatel, Churn=="No")
str(Retained)
set.seed(321) # just so that everyone have the same sample for comparison
Retained_sample = Retained[ sample(nrow(Retained),14711), ]
Final=union(Churned,Retained_sample)
actsubdata <- subset.data.frame(Final, Final$ActiveSubs >1)
actsubdata <- subset.data.frame(Final, Final$ActiveSubs >1, )
actsubdata <- subset.data.frame(Final, Final$ActiveSubs >1)
Churned <- subset(datatel, Churn=="Yes")
str(Churned)
Retained <- subset(datatel, Churn=="No")
str(Retained)
set.seed(321) # just so that everyone have the same sample for comparison
Retained_sample = Retained[ sample(nrow(Retained),14711), ]
Final=union(Churned,Retained_sample)
print(Final)
typeof(Final)
datatel <- read.csv("Telecom Data.csv")
typeof(datatel)
head(datatel)
Churned <- subset(datatel, Churn=="Yes")
str(Churned)
Retained <- subset(datatel, Churn=="No")
str(Retained)
set.seed(321) # just so that everyone have the same sample for comparison
Retained_sample = Retained[ sample(nrow(Retained),14711), ]
Final=union(Churned,Retained_sample)
head(Final)
typeof(Final)
actsubdata <- subset.data.frame(Final, Final$ActiveSubs >1)
actsubdata <- subset(Final, Final$ActiveSubs >1)
print(actsubdata)
sum(is.na(actsubdata$ActiveSubs))
minsub <- 0
nosub <- 0
manysub <- 0
for (i in actsubdata$ActiveSubs){
if (i< 1){
nosub=nosub+1
}else if (i == 1){
minsub=minsub+1
}else if (i > 1) {
manysub=manysub+1
}
i=i+1
}
print(nosub)
print(manysub)
print(minsub)
cor.test(actsubdata$MonthlyRevenue, actsubdata$ActiveSubs, method='spearman')
cor.test(as.numeric(actsubdata$MonthlyRevenue), as.numeric(actsubdata$ActiveSubs), method='spearman')
minsub <- 0
nosub <- 0
manysub <- 0
for (i in actsubdata$ActiveSubs){
if (i< 1){
nosub=nosub+1
}else if (i == 1){
minsub=minsub+1
}else if (i > 1) {
manysub=manysub+1
}
i=i+1
}
print(nosub)
print(manysub)
print(minsub)
nrow(actsubdata$MonthlyRevenue)
nrow(actsubdata$ActiveSubs)
actsubdata <- subset(Final, ActiveSubs >1)
#Plot with statistical results
library(ggplot2)
ggplot(data = actsubdata) +
geom_smooth(mapping = aes(x = ActiveSubs, y = MonthlyRevenue))
Churned <- subset(datatel, Churn=="Yes")
str(Churned)
Retained <- subset(datatel, Churn=="No")
str(Retained)
set.seed(321) # just so that everyone have the same sample for comparison
Retained_sample = Retained[ sample(nrow(Retained),14711), ]
Final=union(Churned,Retained_sample)
head(Final)
Churned <- subset(datatel, Churn=="Yes")
str(Churned)
Retained <- subset(datatel, Churn=="No")
#str(Retained)
set.seed(321) # just so that everyone have the same sample for comparison
Retained_sample = Retained[ sample(nrow(Retained),14711), ]
Final=union(Churned,Retained_sample)
actsubdata <- subset(Final, ActiveSubs >1)
actsubdata <- subset(Final, Final.ActiveSubs >1)
actsubdata <- subset(Final, Final$ActiveSubs >1)
print(actsubdata)
sum(is.na(actsubdata$ActiveSubs))
typeof(Final)
final_p <- as.DataFrame(final)
typeof(Final)
final_p <- as.data.frame(final)
typeof(Final)
final_p <- as.data.frame(Final)
typeof(Final)
final_p <- as.data.frame(Final)
typeof(Final)
typeof(Final)
final_p <- as.data.frame(Final)
typeof(final_p)
typeof(Final)
final_p <- as.data.frame(Final)
typeof(final_p)
head(final_p)
actsubdata <- subset(Final, Final$ActiveSubs >1)
print(actsubdata)
sum(is.na(actsubdata$ActiveSubs))
actsubdata <- subset(Final, Final$ActiveSubs =0)
actsubdata <- subset(Final, Final$ActiveSubs == 0)
print(actsubdata)
sum(is.na(actsubdata$ActiveSubs))
Churned <- subset(datatel, Churn=="Yes")
str(Churned)
Retained <- subset(datatel, Churn=="No")
#str(Retained)
set.seed(321) # just so that everyone have the same sample for comparison
Retained_sample = Retained[ sample(nrow(Retained),14711), ]
Final=union(Churned,Retained_sample)
str(Final)
actsubdata <- subset(Final, Final$ActiveSubs == 0)
print(actsubdata)
sum(is.na(actsubdata$ActiveSubs))
actsubdata <- subset(Final, Final$ActiveSubs > 0)
print(actsubdata)
sum(is.na(actsubdata$ActiveSubs))
actsubdata <- subset(Final, Final$ActiveSubs > 1)
print(actsubdata)
sum(is.na(actsubdata$ActiveSubs))
typeof(datatel)
head(datatel)
actsubdata <- subset(datatel, datatel$ActiveSubs > 1)
print(actsubdata)
sum(is.na(actsubdata$ActiveSubs))
minsub <- 0
nosub <- 0
manysub <- 0
for (i in actsubdata$ActiveSubs){
if (i< 1){
nosub=nosub+1
}else if (i == 1){
minsub=minsub+1
}else if (i > 1) {
manysub=manysub+1
}
i=i+1
}
print(nosub)
print(manysub)
print(minsub)
nrow(actsubdata$MonthlyRevenue)
nrow(actsubdata$ActiveSubs)
cor.test(actsubdata$MonthlyRevenue, actsubdata$ActiveSubs, method='spearman')
#Plot with statistical results
library(ggplot2)
ggplot(data = actsubdata) +
geom_smooth(mapping = aes(x = ActiveSubs, y = MonthlyRevenue))
#install.packages("ggpubr")
library(ggpubr)
ggscatter(data = actsubdata, x = "ActiveSubs", y = "MonthlyRevenue",
conf.int = TRUE, color="Violet")
#Plot with statistical results
library(ggplot2)
ggplot(data = actsubdata) +
geom_smooth(mapping = aes(x = ActiveSubs, y = MonthlyRevenue), color="brown")
actsubdata <- subset(datatel, datatel$ActiveSubs > 1)
head(actsubdata)
sum(is.na(actsubdata$ActiveSubs))
