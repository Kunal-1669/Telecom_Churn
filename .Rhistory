head(churndata2)
nrow(churndata2)
sum(is.na(churndata2$MonthlyRevenue))
sum(is.na(churndata2$OverageMinutes))
cor.test(churndata2$MonthlyRevenue, churndata2$OverageMinutes, method='spearman')
#Plot with statistical results
library(ggplot2)
ggplot(data = churndata2) +
geom_smooth(mapping = aes(x = OverageMinutes, y = MonthlyRevenue, color="Brown")) + theme_classic()+
xlab("Overage minutes used by the customer") + ylab("Monthly revenue of the Telecom company ")
#install.packages("ggpubr")
library(ggpubr)
ggscatter(data = churndata2, x = "OverageMinutes", y = "MonthlyRevenue",
conf.int = TRUE, color="brown", xlab="Overage Minutes used by customer", ylab="Monthly Revenue of the Telecom company", title="Scatter plot of Overage Minutes vs Monthly Revenue for churned customers")
retentiondata <- subset(datatel, datatel$Churn == "No")
retentiondata <- subset(Telecom_Data, Telecom_Data$Churn == "No")
head(retentiondata)
nrow(retentiondata)
sum(is.na(retentiondata$MonthlyRevenue))
sum(is.na(retentiondata$OverageMinutes))
retentiondata2 <- na.omit(retentiondata)
head(retentiondata2)
nrow(retentiondata2)
sum(is.na(retentiondata2$MonthlyRevenue))
sum(is.na(retentiondata2$OverageMinutes))
cor.test(retentiondata2$MonthlyRevenue, retentiondata2$OverageMinutes, method='spearman')
#Plot with statistical results
library(ggplot2)
ggplot(data = retentiondata2)+
geom_smooth(mapping = aes(x = OverageMinutes, y = MonthlyRevenue), color="dark green" ) + theme_classic() + xlab("Overage minutes used by the customer") + ylab("Monthly revenue of the Telecom company ")
chisq_test=chisq.test(PrizmCode)
telecom <- data.frame(read.csv("Telecom Data.csv"))
str(telecom)
head(telecom)
library(ggplot2)
library(ggplot2)
Churned <- subset(telecom, Churn=="Yes")
NotChurned <- subset(telecom, Churn=="No")
str(Churned)
str(NotChurned)
library(ggplot2)
library(ggplot2)
chisq_test=chisq.test(PrizmCode)
# some of common options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
# knitr::opts_chunk$set(warning = F, results = "markup", message = F)
knitr::opts_chunk$set(warning = F, results = "hide", message = F)
# knitr::opts_chunk$set(include = F)
# knitr::opts_chunk$set(echo = TRUE)
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3)
# ‘scipen’: integer. A penalty to be applied when deciding to print numeric values in fixed or exponential notation.  Positive values bias towards fixed and negative towards scientific notation: fixed notation will be preferred unless it is more than ‘scipen’ digits wider.
# use scipen=999 to prevent scientific notation at all times
# The package "ezids" (EZ Intro to Data Science) includes a lot of the helper functions we developed for the course.
# Some of the frequently used functions are loadPkg(), xkabledply(), xkablesummary(), uzscale(), etc.
# Once installed, load the library.
library(ezids)
Telecom_Data <- data.frame(read.csv("Telecom Data.csv"))
ncol(Telecom_Data)
nrow(Telecom_Data)
str(Telecom_Data)
Telecom_Data$Churn <- factor(Telecom_Data$Churn)
Telecom_Data$CreditRating <- factor(Telecom_Data$CreditRating)
Telecom_Data$Occupation <- factor(Telecom_Data$Occupation)
xkablesummary(Telecom_Data)
# The package "ezids" (EZ Intro to Data Science) includes a lot of the helper functions we developed for the course.
# Some of the frequently used functions are loadPkg(), xkabledply(), xkablesummary(), uzscale(), etc.
# Once installed, load the library.
library(ezids)
install.packages("learnr")
# The package "ezids" (EZ Intro to Data Science) includes a lot of the helper functions we developed for the course.
# Some of the frequently used functions are loadPkg(), xkabledply(), xkablesummary(), uzscale(), etc.
# Once installed, load the library.
library(ezids)
# The package "ezids" (EZ Intro to Data Science) includes a lot of the helper functions we developed for the course.
# Some of the frequently used functions are loadPkg(), xkabledply(), xkablesummary(), uzscale(), etc.
# Once installed, load the library.
library(ezids)
# The package "ezids" (EZ Intro to Data Science) includes a lot of the helper functions we developed for the course.
# Some of the frequently used functions are loadPkg(), xkabledply(), xkablesummary(), uzscale(), etc.
# Once installed, load the library.
#library(ezids)
# some of common options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
# knitr::opts_chunk$set(warning = F, results = "markup", message = F)
knitr::opts_chunk$set(warning = F, results = "hide", message = F)
# knitr::opts_chunk$set(include = F)
# knitr::opts_chunk$set(echo = TRUE)
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3)
# ‘scipen’: integer. A penalty to be applied when deciding to print numeric values in fixed or exponential notation.  Positive values bias towards fixed and negative towards scientific notation: fixed notation will be preferred unless it is more than ‘scipen’ digits wider.
# use scipen=999 to prevent scientific notation at all times
Telecom_Data <- data.frame(read.csv("Telecom Data.csv"))
ncol(Telecom_Data)
nrow(Telecom_Data)
Telecom_Data$Churn <- factor(Telecom_Data$Churn)
Telecom_Data$CreditRating <- factor(Telecom_Data$CreditRating)
Telecom_Data$Occupation <- factor(Telecom_Data$Occupation)
xkablesummary(Telecom_Data)
library(dplyr)
telecom <- data.frame(read.csv("Telecom Data.csv"))
str(telecom)
head(telecom)
library(ggplot2)
install.packages("rlang")
telecom <- data.frame(read.csv("Telecom Data.csv"))
str(telecom)
head(telecom)
library(ggplot2)
ggplot(telecom, aes(y=CreditRating)) + geom_boxplot( colour="orange", fill="black") + ggtitle("Credit  using `ggplot`")
Churned <- subset(telecom, Churn=="Yes")
NotChurned <- subset(telecom, Churn=="No")
str(Churned)
str(NotChurned)
library(ggplot2)
ggplot(Churned, aes(x = CreditRating)) + geom_bar(col="black", fill="green") + ggtitle("Credit Rating for Churned Telecom Data") + labs(x="Credit Rating (x-axis) ", y=" Count (y-axis)"+ ylim(0,100))
library(ggplot2)
ggplot(NotChurned, aes(x = CreditRating)) + geom_bar(col="black", fill="red") + ggtitle("Credit Rating for Not Churned Telecom Data") +  labs(x="Credit Rating (x-axis) ", y=" Count (y-axis)"+ ylim(0,1000))
chisq_test=chisq.test(PrizmCode)
# some of common options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
# knitr::opts_chunk$set(warning = F, results = "markup", message = F)
knitr::opts_chunk$set(warning = F, results = "hide", message = F)
# knitr::opts_chunk$set(include = F)
# knitr::opts_chunk$set(echo = TRUE)
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3)
# ‘scipen’: integer. A penalty to be applied when deciding to print numeric values in fixed or exponential notation.  Positive values bias towards fixed and negative towards scientific notation: fixed notation will be preferred unless it is more than ‘scipen’ digits wider.
# use scipen=999 to prevent scientific notation at all times
IncomeGroup_Churn<-table(Telecom_Data$IncomeGroup,Telecom_Data$Churn)
str(IncomeGroup_Churn)
chisq_test=chisq.test(IncomeGroup_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
str(Telecom_Data)
Service_Area_Churn<-table(Telecom_Data$ServiceArea,Telecom_Data$Churn)
str(Service_Area_Churn)
chisq_test=chisq.test(Service_Area_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
ChildrenInHH_Churn<-table(Telecom_Data$ChildrenInHH,Telecom_Data$Churn)
str(ChildrenInHH_Churn)
chisq_test=chisq.test(ChildrenInHH_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
HandsetRefurbished_Churn<-table(Telecom_Data$HandsetRefurbished,Telecom_Data$Churn)
str(HandsetRefurbished_Churn)
chisq_test=chisq.test(HandsetRefurbished_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(ChildrenInHH_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
HandsetWebCapable_Churn<-table(Telecom_Data$HandsetWebCapable,Telecom_Data$Churn)
str(HandsetWebCapable_Churn)
chisq_test=chisq.test(HandsetWebCapable_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
TruckOwner_Churn<-table(Telecom_Data$TruckOwner,Telecom_Data$Churn)
str(TruckOwner_Churn)
chisq_test=chisq.test(TruckOwner_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(HandsetWebCapable_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
RVOwner_Churn<-table(Telecom_Data$RVOwner,Telecom_Data$Churn)
str(RVOwner_Churn)
chisq_test=chisq.test(RVOwner_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
Homeownership_Churn<-table(Telecom_Data$Homeownership,Telecom_Data$Churn)
str(Homeownership_Churn)
chisq_test=chisq.test(Homeownershipr_Churn)
chisq_test=chisq.test(Homeownership_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
BuysViaMailOrder_Churn<-table(Telecom_Data$BuysViaMailOrder,Telecom_Data$Churn)
str(BuysViaMailOrder_Churn)
chisq_test=chisq.test(BuysViaMailOrder_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
RespondsToMailOffers_Churn<-table(Telecom_Data$RespondsToMailOffers,Telecom_Data$Churn)
str(RespondsToMailOffers_Churn)
chisq_test=chisq.test(RespondsToMailOffers_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
OptOutMailings_Churn<-table(Telecom_Data$OptOutMailings,Telecom_Data$Churn)
str(OptOutMailings_Churn)
chisq_test=chisq.test(OptOutMailings_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
NonUSTravel_Churn<-table(Telecom_Data$NonUSTravel,Telecom_Data$Churn)
str(NonUSTravel_Churn)
chisq_test=chisq.test(NonUSTravel_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
OwnsComputer_Churn<-table(Telecom_Data$OwnsComputer,Telecom_Data$Churn)
str(OwnsComputer_Churn)
chisq_test=chisq.test(OwnsComputer_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
HasCreditCard_Churn<-table(Telecom_Data$HasCreditCard,Telecom_Data$Churn)
str(HasCreditCard_Churn)
chisq_test=chisq.test(HasCreditCard_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
NewCellphoneUser_Churn<-table(Telecom_Data$NewCellphoneUser,Telecom_Data$Churn)
str(HasCreditCard_Churn)
chisq_test=chisq.test(NewCellphoneUser_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(HasCreditCard_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
NotNewCellphoneUser_Churn<-table(Telecom_Data$NotNewCellphoneUser,Telecom_Data$Churn)
str(NotNewCellphoneUser_Churn)
chisq_test=chisq.test(NewCellphoneUser_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
OwnsMotorcycle_Churn<-table(Telecom_Data$OwnsMotorcycle,Telecom_Data$Churn)
str(OwnsMotorcycle_Churn)
chisq_test=chisq.test(OwnsMotorcycle_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
HandsetPrice_Churn<-table(Telecom_Data$HandsetPrice,Telecom_Data$Churn)
str(HandsetPrice_Churn)
chisq_test=chisq.test(HandsetPrice_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
MadeCallToRetentionTeam_Churn<-table(Telecom_Data$MadeCallToRetentionTeam,Telecom_Data$Churn)
str(MadeCallToRetentionTeam_Churn)
chisq_test=chisq.test(MadeCallToRetentionTeam_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
CreditRating_Churn<-table(Telecom_Data$CreditRating,Telecom_Data$Churn)
str(CreditRating_Churn)
chisq_test=chisq.test(CreditRating_Churn_Churn)
chisq_test=chisq.test(CreditRating_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
PrizmCode_Churn<-table(Telecom_Data$PrizmCode,Telecom_Data$Churn)
str(PrizmCode_Churn)
chisq_test=chisq.test(PrizmCode_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
Occupation_Churn<-table(Telecom_Data$Occupation,Telecom_Data$Churn)
str(Occupation_Churn)
chisq_test=chisq.test(Occupation_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
MaritalStatus_Churn<-table(Telecom_Data$MaritalStatus,Telecom_Data$Churn)
str(MaritalStatus_Churn)
chisq_test=chisq.test(MaritalStatus_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
IncomeGroup_Churn<-table(Telecom_Data$IncomeGroup,Telecom_Data$Churn)
str(IncomeGroup_Churn)
chisq_test=chisq.test(IncomeGroup_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(Service_Area_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(ChildrenInHH_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(HandsetWebCapable_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(TruckOwner_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(RVOwner_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(Homeownership_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(BuysViaMailOrder_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(RespondsToMailOffers_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(OptOutMailings_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
chisq_test=chisq.test(NonUSTravel_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
knitr::opts_chunk$set(echo = TRUE)
Telecom_Data <- data.frame(read.csv("Telecom Data.csv"))
Telecom_Data <- data.frame(read.csv("Telecom Data.csv"))
ncol(Telecom_Data)
nrow(Telecom_Data)
str(Telecom_Data)
xkablesummary(Telecom_Data)
xkablesummary(Telecom_Data)
# The package "ezids" (EZ Intro to Data Science) includes a lot of the helper functions we developed for the course.
# Some of the frequently used functions are loadPkg(), xkabledply(), xkablesummary(), uzscale(), etc.
# Once installed, load the library.
#library(ezids)
# some of common options (and the defaults) are:
# include=T, eval=T, echo=T, results='hide'/'asis'/'markup',..., collapse=F, warning=T, message=T, error=T, cache=T, fig.width=6, fig.height=4, fig.dim=c(6,4) #inches, fig.align='left'/'center','right',
# knitr::opts_chunk$set(warning = F, results = "markup", message = F)
knitr::opts_chunk$set(warning = F, results = "hide", message = F)
# knitr::opts_chunk$set(include = F)
# knitr::opts_chunk$set(echo = TRUE)
options(scientific=T, digits = 3)
# options(scipen=9, digits = 3)
# ‘scipen’: integer. A penalty to be applied when deciding to print numeric values in fixed or exponential notation.  Positive values bias towards fixed and negative towards scientific notation: fixed notation will be preferred unless it is more than ‘scipen’ digits wider.
# use scipen=999 to prevent scientific notation at all times
knitr::opts_chunk$set(echo = TRUE)
xkablesummary(Telecom_Data)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
## Checking the null values in the dataset
#summary(Telecom_Data)
#is.null(Telecom_Data)
null_values<-sapply(Telecom_Data, function(x) sum(is.na(x)))
null_values
##Creation of new variables for our analysis
Telecom_Data$perc_recurrent_charge <- (Telecom_Data$TotalRecurringCharge /Telecom_Data$MonthlyRevenue) * 100
Telecom_Data$perc_overage_minute <- (Telecom_Data$OverageMinutes / Telecom_Data$MonthlyMinutes) * 100
str(Telecom_Data)
library(dplyr)
Telecom_Data_yes = filter(Telecom_Data, Churn == "Yes")
Telecom_Data_no = filter(Telecom_Data, Churn == "No")
summary(Telecom_Data_yes)
summary(Telecom_Data_no)
IncomeGroup_Churn<-table(Telecom_Data$IncomeGroup,Telecom_Data$Churn)
str(IncomeGroup_Churn)
chisq_test=chisq.test(IncomeGroup_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
Service_Area_Churn<-table(Telecom_Data$ServiceArea,Telecom_Data$Churn)
str(Service_Area_Churn)
chisq_test=chisq.test(Service_Area_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
ChildrenInHH_Churn<-table(Telecom_Data$ChildrenInHH,Telecom_Data$Churn)
str(ChildrenInHH_Churn)
chisq_test=chisq.test(ChildrenInHH_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
ChildrenInHH_Churn<-table(Telecom_Data$ChildrenInHH,Telecom_Data$Churn)
str(ChildrenInHH_Churn)
chisq_test=chisq.test(ChildrenInHH_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
HandsetWebCapable_Churn<-table(Telecom_Data$HandsetWebCapable,Telecom_Data$Churn)
str(HandsetWebCapable_Churn)
chisq_test=chisq.test(HandsetWebCapable_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
TruckOwner_Churn<-table(Telecom_Data$TruckOwner,Telecom_Data$Churn)
str(TruckOwner_Churn)
chisq_test=chisq.test(TruckOwner_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
RVOwner_Churn<-table(Telecom_Data$RVOwner,Telecom_Data$Churn)
str(RVOwner_Churn)
chisq_test=chisq.test(RVOwner_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
Homeownership_Churn<-table(Telecom_Data$Homeownership,Telecom_Data$Churn)
str(Homeownership_Churn)
chisq_test=chisq.test(Homeownership_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
BuysViaMailOrder_Churn<-table(Telecom_Data$BuysViaMailOrder,Telecom_Data$Churn)
str(BuysViaMailOrder_Churn)
chisq_test=chisq.test(BuysViaMailOrder_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
RespondsToMailOffers_Churn<-table(Telecom_Data$RespondsToMailOffers,Telecom_Data$Churn)
str(RespondsToMailOffers_Churn)
chisq_test=chisq.test(RespondsToMailOffers_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
OptOutMailings_Churn<-table(Telecom_Data$OptOutMailings,Telecom_Data$Churn)
str(OptOutMailings_Churn)
chisq_test=chisq.test(OptOutMailings_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
NonUSTravel_Churn<-table(Telecom_Data$NonUSTravel,Telecom_Data$Churn)
str(NonUSTravel_Churn)
chisq_test=chisq.test(NonUSTravel_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
OwnsComputer_Churn<-table(Telecom_Data$OwnsComputer,Telecom_Data$Churn)
str(OwnsComputer_Churn)
chisq_test=chisq.test(OwnsComputer_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
HasCreditCard_Churn<-table(Telecom_Data$HasCreditCard,Telecom_Data$Churn)
str(HasCreditCard_Churn)
chisq_test=chisq.test(HasCreditCard_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
NewCellphoneUser_Churn<-table(Telecom_Data$NewCellphoneUser,Telecom_Data$Churn)
str(HasCreditCard_Churn)
chisq_test=chisq.test(NewCellphoneUser_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
NotNewCellphoneUser_Churn<-table(Telecom_Data$NotNewCellphoneUser,Telecom_Data$Churn)
str(NotNewCellphoneUser_Churn)
chisq_test=chisq.test(NewCellphoneUser_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
OwnsMotorcycle_Churn<-table(Telecom_Data$OwnsMotorcycle,Telecom_Data$Churn)
str(OwnsMotorcycle_Churn)
chisq_test=chisq.test(OwnsMotorcycle_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
HandsetPrice_Churn<-table(Telecom_Data$HandsetPrice,Telecom_Data$Churn)
str(HandsetPrice_Churn)
chisq_test=chisq.test(HandsetPrice_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
MadeCallToRetentionTeam_Churn<-table(Telecom_Data$MadeCallToRetentionTeam,Telecom_Data$Churn)
str(MadeCallToRetentionTeam_Churn)
chisq_test=chisq.test(MadeCallToRetentionTeam_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
CreditRating_Churn<-table(Telecom_Data$CreditRating,Telecom_Data$Churn)
str(CreditRating_Churn)
chisq_test=chisq.test(CreditRating_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
PrizmCode_Churn<-table(Telecom_Data$PrizmCode,Telecom_Data$Churn)
str(PrizmCode_Churn)
chisq_test=chisq.test(PrizmCode_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
Occupation_Churn<-table(Telecom_Data$Occupation,Telecom_Data$Churn)
str(Occupation_Churn)
chisq_test=chisq.test(Occupation_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
MaritalStatus_Churn<-table(Telecom_Data$MaritalStatus,Telecom_Data$Churn)
str(MaritalStatus_Churn)
chisq_test=chisq.test(MaritalStatus_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
knitr::opts_chunk$set(echo = TRUE)
chisq_test=chisq.test(NotNewCellphoneUser_Churn)
chisq_test
p_value=chisq_test$p.value
print(paste("The p value is:",p_value))
